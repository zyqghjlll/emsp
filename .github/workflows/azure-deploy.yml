name: Build and Deploy to Azure

on:
  push:
    branches:
      - master
  workflow_dispatch:  # 支持手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ☕ Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: 🔨 Build JAR with Maven
        run: mvn clean package -DskipTests

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📚 Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      #      - name: 🔐 Azure Login
      #        uses: azure/login@v1
      #        with:
      #          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 🌍 Set Azure App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: emsp-app
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          app-settings-json: |
            [
              { "name": "SPRING_PROFILES_ACTIVE", "value": "azure" }
            ]

      - name: 🚀 Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: emsp-app
          slot-name: production
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ghcr.io/${{ github.repository }}:latest

      - name: 🚀 Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}:latest
            docker stop emsp || true
            docker rm emsp || true
            docker run -d --name emsp -e SPRING_PROFILES_ACTIVE=aws -p 8080:8080 ghcr.io/${{ github.repository }}:latest